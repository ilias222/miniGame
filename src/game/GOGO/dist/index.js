/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("/*\n * ATTENTION: The \"eval\" devtool has been used (maybe by default in mode: \"development\").\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./src/index.js\":\n/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/\n/***/ (() => {\n\neval(\"let countLevel = 1; // Начальный уровень, счетчик\\r\\nlet useAnimaCount = 1; // щетчик имени спрайта\\r\\nlet otherAnimationCount = 1 // счетчик имени прочих\\r\\nlet allColsAnimation = 1 // счетчик анимации - выше счетчики убрать и переделать все на общую функцию\\r\\nlet speedUse = 120; // скорость игрока\\r\\nlet cordBottom = 450; // Нижняя точка игрока,\\r\\nlet levelHardJump = 5; // уровень рандома в прыжке   --- увеличить и прыжок будет не предсказуем по высоте (НЕ БОЛЬШЕ 25!!!!)\\r\\nlet levelHardFall = 10; // скорость падения в пикселях\\r\\nlet pxFailedUser = 50; // скорость падения в пикселях\\r\\nlet speedFailInterval = 100 // скорость кадра падения в м.с. -- увелич и время падения игрока увеличиться. Чем больше тем дольше висим в одной точке\\r\\nlet heightJump = 100 // Высота прыжка игрока за одно нажатие --- увелич и прыгать будет выше (не более 450)\\r\\nlet topVertical = -30; // координата потолка в пикселях -- можно убрать убавив значение\\r\\nlet jumpInterval; // id интервала падения\\r\\nlet jumpSpeedCadr = 35; // скорость кадра прыжка -- для улитки\\r\\nlet idSpeedJumpCadr; // id  скорость кадра прыжка -- для улитки\\r\\nlet colsBox = 10; // количество блоков\\r\\nlet startStop = 0; // включить и выключить анимацию игрока\\r\\nlet intervalActionUse; // id интервала бега игрока\\r\\nlet intervalFaceObj; //id интервала рендера фигур переднего плана\\r\\nlet intervalFaceObjMove; // id интервала активности блоков переднего плана\\r\\nlet speedRenderFaceObj = 10; // скорость рендера новой фигуры, в м.с -- не трогать!\\r\\nlet speedFaceObjMove = 90; // скорость движения блоков переднего плана -- НЕ РАБОТАЕТ ПОКА НЕ РАБОТАЕТ ПОТОМУ ЧТО НЕ РАБОТАЕТ!!!!\\r\\nlet distankObjMove = 1000; // дистанция между блоками переднего плана\\r\\nlet arrboxId = []; // id боксов\\r\\nlet heart = 3; // Количество попыток за 1 заход\\r\\nlet userColsJump = 0; // Количество перепрыгнутых блоков\\r\\nlet useFailedBottom;\\r\\nlet operativUserTop;\\r\\nlet jumpFry; // Таймаут восстановления перок, держим в 1 точке\\r\\nlet miniCounterJump = 0; // счетчик секунд зависания в 1 точке, для восстановления перок\\r\\nlet colsPXMoveElem = 10000; // высчитываем границу блока боксов\\r\\nlet colsPerk = 3; // Количество перков у персонажа\\r\\nlet lokalPerk; // локальное количество перков\\r\\nlet gameMusik = '' // Музыка уровня\\r\\nlet myCheked = null; // интервал запуска восстановления перок\\r\\nlet heightChesk; // ширина чека перок \\r\\nlet topChesk; // верхная точка чека перок\\r\\nlet bossAnimaId = -1; // интервал боса\\r\\nlet bossAnimaBoxId = -1; // интервал боса доп интервал\\r\\nlet bossEndId; // интервал босса, конец\\r\\nlet widthBoss = 10; // статусы босса\\r\\nlet heightBoss = 10; // статусы босса\\r\\nlet countBoss = 0; // счетчик кругов босса\\r\\nlet hpBoss = 100; // очки босса\\r\\nlet hardBoss = 0; // сложновть босса\\r\\n\\r\\nlet arrComentOk = ['Молодец!','Проворный','Легко','Успел!','Ловкач','Победитель','Так держать!'];\\r\\nlet arrComentLoser = ['Еще получиться','Не переживай','Почти!','Попробуй еще','Соберись!'];\\r\\nlet changDirPatch = ['best_bith','big_sanches','cool_Jro','fire_ass','laiw_cucu','office_clerk'];\\r\\nlet historyPers = [`Этот ципленок очень быстр, но его вес явно мешает ему прыгать, \\r\\n                        так что он делает прыжок - как попало.<br>\\r\\n                        Особое умение - уменьшение высоты блоков. <br>Прыгай только на подъем - Курицы не летают!`,\\r\\n                    `Этот лис всегда усталый. Но не верь ему, он очень хитер! \\r\\n                    Может его бег не настолько быстр, зато в прыжках он знает толк.<br>\\r\\n                    Особый навык - находить лазейки, там, где все не могут!`,\\r\\n                    `Позер он и в Африке позер. Никуда не торопиться, особо ничего не умеет, \\r\\n                    только и красуется на публику.<br>\\r\\n                    Особый навык - есть только я, все остальное подождет`,\\r\\n                    `Что это не понятно, но у его знатно припекает, так что будет весело, быстро и высоко!<br>\\r\\n                    Особый навык - \\\"долгоиграющая штучка\\\", все проиграют, а у его есть больше шанса!`,\\r\\n                    `Гикон, но уже не такой быстрый. Ему бы добаться куда ни будь.<br>\\r\\n                    Особово навыка - нет, но есть баланс скорости и прыжка`,\\r\\n                    `Это кто то из нас, все впитываем и еще и ЕЩЕ больше кофе. Надо бы отдохнуть, но только\\r\\n                    потом!.<br> Особый навык - \\\"Изменять правила\\\", если что то можно сделать на автомате, \\r\\n                    почему бы и не сделать? `];\\r\\nlet namePers = ['Богатый цыпа', 'Жирный Санчес', 'Крутой Жро', 'Горипопка', 'Свежий огурчик', 'Офисный Кларк']\\r\\n// Номер имени персонажа в массиве, счетчик\\r\\nlet numberUser = 0;\\r\\n// Параметры уровней - количество блоков, растояние между блоками, задний фон, босс, музыка фона\\r\\nlet arrLevel; // массив текущего уровня\\r\\nconst level_1 = ['10','1000','fonts1', 'null'];\\r\\nconst level_2 = ['15','850','fonts2', 'null'];\\r\\nconst level_3 = ['20','800','fonts3', 'boss1'];\\r\\n\\r\\nlet intervalCat; //id таймаута кат сцен\\r\\n\\r\\nlet mirror = {\\r\\n    text_1 : `В мрачных глубинах леса, окутанного завесой тумана, возник зловещий силуэт. \\r\\n    Ночной воздух дрожал от его могучей ауры, и исчезновения светил луны казались незаслуженной виной. \\r\\n    Это был злой призрак, скитающийся из мира теней, готовый наложить свой гнет на всё живое. \\r\\n    Его ледяной взгляд метался по мрачным стволам деревьев, прежде чем он произнес заклинание.`\\r\\n}\\r\\n\\r\\nlet mrShadow1 = {\\r\\n    text_1 : 'Хе, хе, хе! Что бы придумать, такого пакостного?',\\r\\n    text_2 : 'Мммм... А! Вот это подойдет...',\\r\\n    text_3 : 'Прийдите мои злые пни!',\\r\\n    text_4 : 'Поселитесь в этом лесу, и нидавайте покоя здешним жителям!',\\r\\n    text_5 : 'ПЕС! Ко мне!',\\r\\n    text_6 : 'Остаешся за главного! Смотри у меня тут...',\\r\\n    text_7 : 'Упс, мне пора! Всего вам хорошего... Хе, хе, хе.'\\r\\n}\\r\\n\\r\\nlet angryDef1 = {\\r\\n    text_1 : 'Мы тут, хозяин...',\\r\\n    text_2 : 'Будет исполнено!'\\r\\n}\\r\\n\\r\\nlet angryDoc1 = {\\r\\n    text_1 : 'Wow...&^!@*&...0981',\\r\\n    text_2 : 'Oo...--->>>'\\r\\n}\\r\\n\\r\\nlet clarc = {\\r\\n    text_1 : 'Что тут за шум??? Вы знаете какое время?',\\r\\n    text_2 : 'Горипопка! Ты же не знаешь что это такое! Ребята, что здесь произошло?'\\r\\n}\\r\\n\\r\\nlet fireAss1 = {\\r\\n    text_1 : 'Опа хопа! Не уйдешь!!!',\\r\\n    text_2 : 'Быстрый трус, не догнать! Но похоже спрятался на краю леса у каменой арки!'\\r\\n}\\r\\n\\r\\nlet bitch = {\\r\\n    text_1 : 'Ко ко ко! По всему лесу ходят страшилы! Они медленные и сильные, не советую к ним приближаться!'\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n// Генератор кат сцен\\r\\n\\r\\n// Открыть пустой титульный лист\\r\\n/**\\r\\n * открываем пустой титульный лист, загружуем фон и открываем/закрываем окно диалога текста\\r\\n * @param {string} fontPatch \\r\\n */\\r\\nconst catCreateWind = (fontPatch, winText = true) =>{\\r\\n    // берем начальное меню и скрываем выбор персонажа\\r\\n    document.querySelector('.titleBox').style.display = 'block';\\r\\n    document.querySelector('.userVariable').style.display = 'none';\\r\\n    document.querySelector('.userVariable').style.display = 'none';\\r\\n    document.querySelector('.historyPers').style.display = 'none';\\r\\n    document.querySelector('.namePers').style.display = 'none';\\r\\n    document.querySelector('.runGameCheck').style.display = 'none';\\r\\n\\r\\n    // меняем задний фон, в зависимости от переданого пути в папку img\\r\\n    document.querySelector('.titleFonts').src = fontPatch;\\r\\n\\r\\n    // Создаем окно для текста\\r\\n    let winActionText = document.createElement('div');\\r\\n    winActionText.className = 'winActionText';\\r\\n    let winActionTextList = document.createElement('p');\\r\\n    winActionTextList.className = 'winActionTextList';\\r\\n    let winActionName = document.createElement('p');\\r\\n    winActionName.className = 'winActionName';\\r\\n\\r\\n    winActionText.append(winActionName);\\r\\n    winActionText.append(winActionTextList);\\r\\n\\r\\n    if(winText){\\r\\n        winActionText.style.display = 'flex'; \\r\\n    } else {\\r\\n        winActionText.style.display = 'none';\\r\\n    }\\r\\n    \\r\\n    document.querySelector('.titleStart').append(winActionText)   \\r\\n}\\r\\n\\r\\nconst textCat = (nameBotText, arrNumber, nameBot, speedText = 50) =>{\\r\\n    document.querySelector('.winActionTextList').textContent = '';\\r\\n    let textShadow = nameBotText[`text_${arrNumber}`];\\r\\n\\r\\n    console.log(textShadow)\\r\\n\\r\\n    textShadow = textShadow.split('');\\r\\n    document.querySelector('.winActionName').textContent = nameBot;\\r\\n\\r\\n    textShadow.forEach((e,i) =>{\\r\\n\\r\\n        setTimeout(() => {\\r\\n            document.querySelector('.winActionTextList').textContent += e; \\r\\n        }, speedText * i)\\r\\n    })\\r\\n}\\r\\n\\r\\n// Функция запуска анимации игрока\\r\\nconst userAnima = (className, colsPage) =>{\\r\\n    document.querySelector(`.${className}`).src = `../../sprite/${changDirPatch[numberUser]}/simpl_${useAnimaCount}.png`;\\r\\n    useAnimaCount++;\\r\\n    useAnimaCount > colsPage ? useAnimaCount = 1 : null;\\r\\n}\\r\\n\\r\\n// Функция запуска анимации прочих\\r\\nconst otherAnima = (className, nameDir, colsPage) =>{\\r\\n    document.querySelector(`.${className}`).src = `../../img/${nameDir}/simpl_${otherAnimationCount}.png`;\\r\\n    otherAnimationCount++;\\r\\n    otherAnimationCount > colsPage ? otherAnimationCount = 1 : null;\\r\\n}\\r\\n\\r\\n// Функция запуска анимации - новая для всего\\r\\n/**\\r\\n * передавай - название элемента HTML чей src нужно менять, путь до конечной папки включительноб количество кадров\\r\\n * файлы все называются simpl_{number}\\r\\n * @param {string} className \\r\\n * @param {string} patchPullDir \\r\\n * @param {number} colsPage \\r\\n */\\r\\nconst allAnima = (className, patchPullDir, colsPage) =>{\\r\\n    allColsAnimation == colsPage ? allColsAnimation = 1 : null;\\r\\n    document.querySelector(`.${className}`).src = `${patchPullDir}/simpl_${allColsAnimation}.png`;\\r\\n    allColsAnimation++;\\r\\n}\\r\\n\\r\\n//Модальное окно, заполняем\\r\\nconst modalPush = (title, colsJump, levelBox, nextLevel=false) => {\\r\\n    let modal = document.querySelector('.modal');\\r\\n    modal.style.display = 'block';\\r\\n    modal.querySelector('.titleModal').textContent = title;\\r\\n    modal.querySelector('.success').textContent = `Перепрыгнуто: ${userColsJump}`;\\r\\n\\r\\n    if (!nextLevel){\\r\\n        modal.querySelector('.nextLevel').className = 'nextLevel reload';\\r\\n        modal.querySelector('.nextLevel').textContent = 'Попробовать еще'\\r\\n    } else {\\r\\n        modal.querySelector('.nextLevel').className = 'nextLevel';\\r\\n        modal.querySelector('.nextLevel').textContent = 'Следующий уровень';\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n// Настройки уровня - первый вход при старте!\\r\\nconst runConfigLevel = () =>{\\r\\n    // Запускаем настройки уровня\\r\\n    // Если будем делать больше уровней - то подумай над функцией настройки, т.к. все однообразно\\r\\n    switch (countLevel) {\\r\\n        case 1:\\r\\n            arrLevel = level_1;\\r\\n            distankObjMove = level_1[1];\\r\\n            // Если играем за клерка - то выходим из свича\\r\\n            if(changDirPatch[numberUser] != 'office_clerk')goRenderObj(250, 850);\\r\\n            musikFonts(countLevel);\\r\\n            document.querySelector('.fonts1').src = `../../img/${level_1[2]}.png`;\\r\\n            document.querySelector('.fonts2').src = `../../img/${level_1[2]}.png`;\\r\\n            document.querySelector('.fonts3').src = `../../img/${level_1[2]}.png`;\\r\\n            colsBox = level_1[0];\\r\\n            colsPXMoveElem = 10000;\\r\\n            break;\\r\\n\\r\\n        case 2:\\r\\n            arrLevel = level_2;\\r\\n            distankObjMove = level_2[1];\\r\\n            // Если играем за клерка - то выходим из свича\\r\\n            if(changDirPatch[numberUser] != 'office_clerk') goRenderObj(250, 1600);\\r\\n            musikFonts(countLevel);\\r\\n            document.querySelector('.fonts1').src = `../../img/${level_2[2]}.png`;\\r\\n            document.querySelector('.fonts2').src = `../../img/${level_2[2]}.png`;\\r\\n            document.querySelector('.fonts3').src = `../../img/${level_2[2]}.png`;\\r\\n            colsBox = level_2[0];\\r\\n            colsPXMoveElem = 15000;\\r\\n            break;\\r\\n\\r\\n        case 3:\\r\\n            arrLevel = level_3;\\r\\n            distankObjMove = level_3[1];\\r\\n            // Если играем за клерка - то выходим из свича\\r\\n            if(changDirPatch[numberUser] != 'office_clerk') goRenderObj(250, 1600);\\r\\n            musikFonts(countLevel);\\r\\n            document.querySelector('.fonts1').src = `../../img/${level_3[2]}.png`;\\r\\n            document.querySelector('.fonts2').src = `../../img/${level_3[2]}.png`;\\r\\n            document.querySelector('.fonts3').src = `../../img/${level_3[2]}.png`;\\r\\n            colsBox = level_3[0];\\r\\n            colsPXMoveElem = 20000;\\r\\n\\r\\n            if(arrLevel[3] != 'null'){\\r\\n                let bossBox = document.createElement('div');\\r\\n                let bossImg = document.createElement('img');\\r\\n                bossBox.className = 'bossBox';\\r\\n                bossBox.style.position = 'absolute';\\r\\n                bossBox.style.top = '50px';\\r\\n                bossBox.style.right = '4%';\\r\\n                bossBox.style.display = 'flex';\\r\\n                bossBox.style.flexDirection = 'column';\\r\\n                bossBox.style.alignItems = 'center';\\r\\n\\r\\n                bossImg.className = 'bossImg';\\r\\n                bossImg.style.width = '330px';\\r\\n\\r\\n\\r\\n                let hpB = document.createElement('p');\\r\\n                hpB.textContent = 'HP';\\r\\n                hpB.className = 'linerHPBoss';\\r\\n                let hpColor = document.createElement('span');\\r\\n                hpColor.className = 'linerHPBossColor';\\r\\n                hpColor.style.width = `${hpBoss}px`;\\r\\n\\r\\n                hpB.append(hpColor);\\r\\n\\r\\n                bossBox.append(hpB);\\r\\n                \\r\\n                bossBox.append(bossImg);\\r\\n\\r\\n                document.querySelector('.boxcontainer').append(bossBox);\\r\\n            }\\r\\n            break;\\r\\n    \\r\\n        default:\\r\\n            break;\\r\\n    }\\r\\n};\\r\\n// Пускаем рендер боксов, применяем настройки уровня\\r\\nconst goRenderObj = (heightBox=250, widhBox = 850, widthCols=50, heightCols=50,  fileIsPatchIMG = '../../img/box.png', hers = '💗') => {\\r\\n    document.querySelector('.statrText').textContent = 'Приготовься!';\\r\\n        setTimeout(() => {\\r\\n            document.querySelector('.statrText').textContent = 'Вперед!';\\r\\n        }, 2000);\\r\\n        setTimeout(() => {\\r\\n            document.querySelector('.statrText').textContent = '';\\r\\n        }, 3000);\\r\\n\\r\\n        document.querySelector('.health').innerHTML = '';\\r\\n        document.querySelector('.health').insertAdjacentHTML('afterbegin', \\r\\n            `<span class=\\\"one\\\" id=\\\"h_1\\\">${hers}</span>\\r\\n            <span class=\\\"two\\\" id=\\\"h_2\\\">${hers}</span>\\r\\n            <span class=\\\"kwadro\\\" id=\\\"h_3\\\">${hers}</span>`\\r\\n            );\\r\\n\\r\\n        // Ставим на исходную блок с боксами\\r\\n        document.querySelector('.moveElem').style.left = '1000px';\\r\\n\\r\\n        // Пускаем рендер объектов первого плана\\r\\n        intervalFaceObj = setInterval(()=> {\\r\\n            let newObjFace = document.createElement('img');\\r\\n            newObjFace.src = fileIsPatchIMG;\\r\\n            newObjFace.className = `faceBox_${colsBox} faceBox`;\\r\\n            newObjFace.id = colsBox; \\r\\n            colsBox -= 1;\\r\\n            newObjFace.style.position = 'absolute';\\r\\n            newObjFace.style.bottom = '-9px';\\r\\n            newObjFace.style.left = `${distankObjMove * colsBox }px`;\\r\\n            newObjFace.style.width = `${Math.ceil(Math.random()*10) + widthCols}px`;\\r\\n            newObjFace.style.height = `${Math.ceil(Math.random()*heightBox) + heightCols}px`;\\r\\n            newObjFace.style.zIndex = 3;\\r\\n\\r\\n            document.querySelector('.moveElem').style.left = '1000px'\\r\\n            document.querySelector('.moveElem').append(newObjFace);\\r\\n            document.querySelector('.moveElem').style.width = widhBox + '%';\\r\\n            document.querySelector('.moveElem').style.height = '72%';\\r\\n\\r\\n            colsBox <= 0 ? clearInterval(intervalFaceObj) : null;\\r\\n\\r\\n        }, speedRenderFaceObj);\\r\\n}\\r\\n\\r\\n// Анимация и цонфиги движения блоков и пересечения с ними игрока\\r\\nconst phyzikBox = (timeCadrSpreed = speedFaceObjMove) => {\\r\\n    return setInterval(() => {\\r\\n        let leftFonts1 = Number(document.querySelector('.fonts1').style.left.replace('px', ''));\\r\\n        let leftFonts2 = Number(document.querySelector('.fonts2').style.left.replace('px', ''));\\r\\n        let leftFonts3 = Number(document.querySelector('.fonts3').style.left.replace('px', ''));\\r\\n        \\r\\n        leftFonts1 <= -1000 ?\\r\\n            document.querySelector('.fonts1').style.left = '1950px'\\r\\n        :\\r\\n            document.querySelector('.fonts1').style.left = \\r\\n                Number(document.querySelector('.fonts1').style.left.replace('px', '')) - 30 + 'px';\\r\\n\\r\\n        leftFonts2 <= -1000 ?\\r\\n        document.querySelector('.fonts2').style.left = '1960px'\\r\\n        :\\r\\n        document.querySelector('.fonts2').style.left = \\r\\n            Number(document.querySelector('.fonts2').style.left.replace('px', '')) - 30 + 'px';\\r\\n\\r\\n            leftFonts3 <= -1000 ?\\r\\n            document.querySelector('.fonts3').style.left = '1970px'\\r\\n            :\\r\\n            document.querySelector('.fonts3').style.left = \\r\\n                Number(document.querySelector('.fonts3').style.left.replace('px', '')) - 30 + 'px';\\r\\n\\r\\n\\r\\n        \\r\\n        document.querySelector('.moveElem').style.left = \\r\\n            Number(document.querySelector('.moveElem').style.left.replace('px', '')) - 30 + 'px';\\r\\n\\r\\n            document.querySelectorAll('.faceBox').forEach(el => {\\r\\n\\r\\n                // Снимаем очко здоровья\\r\\n                if(el.getBoundingClientRect().x <= 125 && \\r\\n                \\r\\n\\r\\n                    document.querySelector('.user').getBoundingClientRect().top + \\r\\n                    document.querySelector('.user').getBoundingClientRect().height + 2 > \\r\\n                    el.getBoundingClientRect().top &&\\r\\n\\r\\n                    el.id != arrboxId[arrboxId.length - 1]){\\r\\n\\r\\n                    arrboxId.push(el.id);\\r\\n                    \\r\\n                    document.getElementById(`h_${heart}`).className += ' animalHeartCut';\\r\\n                    document.querySelector('.comentLoser').textContent =\\r\\n                        arrComentLoser[Math.ceil(Math.random()*5)];\\r\\n                    document.querySelector('.comentLoser').className += ' animateComentLoser';\\r\\n                    \\r\\n                    setTimeout(()=> {\\r\\n                        // Звук игрока при потере очка здоровья\\r\\n                        let gameUser = document.createElement('audio');\\r\\n                        gameUser.src = `../../music/${changDirPatch[numberUser]}/${changDirPatch[numberUser]}.mp3`;\\r\\n                        gameUser.play();\\r\\n\\r\\n\\r\\n\\r\\n                        document.querySelector('.comentLoser').className = 'comentLoser';\\r\\n                        document.getElementById(`h_${heart}`).remove();\\r\\n                        document.querySelector('.comentLoser').textContent = '';\\r\\n                        heart = heart - 1;\\r\\n\\r\\n                        if(heart == 0){\\r\\n                            document.querySelector('.moveElem').style.left = '1000px';\\r\\n                            document.querySelector('.moveElem').innerHTML = '';\\r\\n                            startStop = 0;\\r\\n                            clearInterval(intervalActionUse);\\r\\n                            clearInterval(intervalFaceObjMove);\\r\\n                            clearInterval(idSpeedJumpCadr);\\r\\n                            let gameOver = document.createElement('audio');\\r\\n                            gameOver.src = '../../music/game/gameOver.mp3';\\r\\n                            gameOver.play();\\r\\n\\r\\n                            modalPush ('Эх, проиграл', false);\\r\\n                        }\\r\\n                    }, 500);\\r\\n                }\\r\\n\\r\\n                // Засчитываем очко\\r\\n                if(el.getBoundingClientRect().x <= 28 &&\\r\\n\\r\\n                document.querySelector('.user').getBoundingClientRect().top + \\r\\n                document.querySelector('.user').getBoundingClientRect().height < \\r\\n                el.getBoundingClientRect().top &&\\r\\n\\r\\n                el.id != arrboxId[arrboxId.length - 1]){\\r\\n\\r\\n                    arrboxId.push(el.id);\\r\\n\\r\\n                    document.querySelector('.jumpBox').className += ' animaCount';\\r\\n                    document.querySelector('.jumpBox').textContent = \\r\\n                    Number(document.querySelector('.jumpBox').textContent) + 1;\\r\\n                    userColsJump = Number(document.querySelector('.jumpBox').textContent);\\r\\n\\r\\n                    document.querySelector('.comentOk').className += ' animateComentOk'\\r\\n                    document.querySelector('.comentOk').textContent = \\r\\n                    arrComentOk[Math.ceil(Math.random()*7)];\\r\\n\\r\\n                    setTimeout(() => {\\r\\n                        document.querySelector('.jumpBox').className = 'jumpBox';\\r\\n                        document.querySelector('.comentOk').className = 'comentOk';\\r\\n                        document.querySelector('.comentOk').textContent = '';\\r\\n                    }, 1000)\\r\\n                    \\r\\n                }\\r\\n\\r\\n\\r\\n                if(el.getBoundingClientRect().x < 28){\\r\\n\\r\\n                    el.remove();\\r\\n                }\\r\\n            })\\r\\n\\r\\n        if(Number(document.querySelector('.moveElem').style.left.replace('px', '')) < - colsPXMoveElem){\\r\\n            document.querySelector('.moveElem').style.left = '1000px';\\r\\n            document.querySelector('.moveElem').innerHTML = '';\\r\\n            clearInterval(intervalFaceObjMove);\\r\\n            startStop = 0;\\r\\n            clearInterval(intervalActionUse);\\r\\n            clearInterval(intervalFaceObjMove);\\r\\n            clearInterval(idSpeedJumpCadr);\\r\\n            let gameOver = document.createElement('audio');\\r\\n            gameOver.src = '../../music/game/nextLevel.mp3';\\r\\n            gameOver.play();\\r\\n            modalPush ('Уровень пройден', true);\\r\\n        } \\r\\n        \\r\\n    }, timeCadrSpreed);\\r\\n}\\r\\n\\r\\ndocument.querySelector('.historyPers').innerHTML = historyPers[numberUser];\\r\\ndocument.querySelector('.namePers').innerHTML = namePers[numberUser];\\r\\n    \\r\\n// Анимация игрока в меню выбора\\r\\nintervalActionUse = setInterval(() => {\\r\\n    userAnima('userSprite', 12);\\r\\n}, speedUse); \\r\\n\\r\\ndocument.addEventListener('click', (el) =>{\\r\\n\\r\\n    if(el.target.className == 'nextUser'){\\r\\n        numberUser < changDirPatch.length - 1 ? numberUser += 1 : numberUser = 0;\\r\\n        document.querySelector('.historyPers').innerHTML = historyPers[numberUser];\\r\\n        document.querySelector('.namePers').innerHTML = namePers[numberUser];\\r\\n    }\\r\\n\\r\\n    if(el.target.className == 'prevUser'){\\r\\n        numberUser > 0 ? numberUser = numberUser - 1 : numberUser = 5;\\r\\n        document.querySelector('.historyPers').innerHTML = historyPers[numberUser];\\r\\n        document.querySelector('.namePers').innerHTML = namePers[numberUser];\\r\\n    }\\r\\n})\\r\\n\\r\\n// Музыка уровня\\r\\n\\r\\nconst musikFonts = (numberLevel) => {\\r\\n    gameMusik.src != null ? gameMusik.pause() : null;\\r\\n    gameMusik = document.createElement('audio');\\r\\n    gameMusik.src = `../../music/font/level${numberLevel}.mp3`;\\r\\n    gameMusik.play();\\r\\n}\\r\\n    \\r\\ndocument.addEventListener('mouseover', (e) => {\\r\\n        // Выбираем или пропускаем кат сцену\\r\\n        if(e.target.className == 'runGameCheck'){\\r\\n            let winMoveGame = document.createElement('p');\\r\\n            winMoveGame.className = 'winMoveGame';\\r\\n            let variableNo = document.createElement('span');\\r\\n            variableNo.className = 'runGame';\\r\\n            variableNo.textContent = 'пропустить';\\r\\n            let variableYes = document.createElement('span');\\r\\n            variableYes.className = 'variable';\\r\\n            variableYes.textContent = 'введение';\\r\\n    \\r\\n            winMoveGame.append(variableNo);\\r\\n            winMoveGame.append(variableYes);\\r\\n            document.querySelector('.runGameCheck').innerHTML ='';\\r\\n    \\r\\n            document.querySelector('.runGameCheck').append(winMoveGame);\\r\\n        }\\r\\n});\\r\\n\\r\\ndocument.addEventListener('mouseover', (e) => {\\r\\n    // Выбираем или пропускаем кат сцену\\r\\n\\r\\n    if(e.target.className != 'runGame' && e.target.className != 'variable' \\r\\n        && e.target.className != 'runGameCheck'){\\r\\n\\r\\n        document.querySelector('.runGameCheck').innerHTML ='Играть!';\\r\\n        document.querySelector('.winMoveGame') != null ?\\r\\n            document.querySelector('.winMoveGame').remove()\\r\\n            :\\r\\n            null;\\r\\n    }\\r\\n});\\r\\n\\r\\n// Глобальная область\\r\\n\\r\\ndocument.addEventListener('click', (e) =>{\\r\\n\\r\\n    // Кат сценна введение\\r\\n    if(e.target.className == 'variable'){\\r\\n        arrLevel = ['null','null','null','null'];\\r\\n        switch (countLevel) {\\r\\n            case 1:\\r\\n                catCreateWind('../../img/titleFonts.png', false);\\r\\n                let shadowMr = document.createElement('img');\\r\\n                shadowMr.className = 'catOne';\\r\\n                \\r\\n                setTimeout(() => {\\r\\n                    document.querySelector('.titleStart').append(shadowMr);\\r\\n                    intervalCat = setInterval(() => {\\r\\n                        useAnimaCount = 1;\\r\\n                        allAnima('catOne', '../../sprite/shadowMr', 12);\\r\\n                        \\r\\n                    },30);\\r\\n                    setTimeout(() => {\\r\\n                        let timeOut = 4500\\r\\n                        clearInterval(intervalCat);\\r\\n                        document.querySelector('.winActionText').style.display = 'flex';\\r\\n\\r\\n                        textCat(mrShadow1, 1, 'Неизвестный');\\r\\n                        setTimeout(() => {\\r\\n                            textCat(mrShadow1, 2, 'Неизвестный', 100);\\r\\n                        }, timeOut);\\r\\n\\r\\n                        timeOut += 4500;\\r\\n\\r\\n                        setTimeout(() => {\\r\\n                            textCat(mrShadow1, 3, 'Неизвестный', 110);\\r\\n                        }, timeOut);\\r\\n\\r\\n                        timeOut += 4500;\\r\\n\\r\\n                        setTimeout(() => {\\r\\n                            textCat(angryDef1, 1, 'Злые пни', 200);\\r\\n\\r\\n                            let angryDefs1 = document.createElement('img');\\r\\n                            angryDefs1.className = 'angryDefs1';\\r\\n                            angryDefs1.src = '../../sprite/shadowMr/evilGray.png';\\r\\n                            let angryDefs2 = document.createElement('img');\\r\\n                            angryDefs2.className = 'angryDefs2';\\r\\n                            angryDefs2.src = '../../sprite/shadowMr/evilGray.png';\\r\\n\\r\\n                            document.querySelector('.titleStart').append(angryDefs1);\\r\\n                            document.querySelector('.titleStart').append(angryDefs2);\\r\\n                        }, timeOut);\\r\\n\\r\\n                        timeOut += 4500;\\r\\n\\r\\n                        setTimeout(() => {\\r\\n                            textCat(mrShadow1, 4, 'Неизвестный', 90);\\r\\n                        }, timeOut);\\r\\n\\r\\n                        timeOut += 6000;\\r\\n\\r\\n                        setTimeout(() => {\\r\\n                            textCat(angryDef1, 2, 'Злые пни', 200);\\r\\n                            setTimeout(() => {\\r\\n                                document.querySelector('.angryDefs1').className = 'noDef1';\\r\\n                                document.querySelector('.angryDefs2').className = 'noDef2';\\r\\n                                setTimeout(() => {\\r\\n                                    document.querySelector('.noDef1').remove();\\r\\n                                    document.querySelector('.noDef2').remove();\\r\\n                                }, 1500)\\r\\n                            }, 1000)\\r\\n                        }, timeOut);\\r\\n\\r\\n                        timeOut += 6000;\\r\\n\\r\\n                        setTimeout(() => {\\r\\n                            document.querySelector('.catOne').className = 'mrShadow';\\r\\n\\r\\n                            setTimeout(() => {\\r\\n                                textCat(mrShadow1, 5, 'Неизвестный', 90);\\r\\n                            }, 2100);\\r\\n                        }, timeOut);\\r\\n\\r\\n                        timeOut += 4000;\\r\\n                        \\r\\n                        setTimeout(() => {\\r\\n                            let angryDoc = document.createElement('img');\\r\\n                            angryDoc.className = 'angryDoc';\\r\\n                            angryDoc.src = '../../sprite/shadowMr/doc.png'\\r\\n                            document.querySelector('.titleStart').append(angryDoc);\\r\\n\\r\\n                            setTimeout(() => {\\r\\n                                textCat(angryDoc1, 1, 'Робот пёс', 90);\\r\\n                            }, 2000)\\r\\n                        }, timeOut);\\r\\n\\r\\n                        timeOut += 5000;\\r\\n\\r\\n                        setTimeout(() => {\\r\\n                            textCat(mrShadow1, 6, 'Неизвестный', 90);\\r\\n                        }, timeOut);\\r\\n\\r\\n                        timeOut += 3000;\\r\\n\\r\\n                        setTimeout(() => {\\r\\n                            document.querySelector('.angryDoc').className = 'angryDoc2';\\r\\n                            document.querySelector('.angryDoc2').src = '../../sprite/shadowMr/doc_2.png';\\r\\n                        }, timeOut);\\r\\n\\r\\n                        timeOut += 4000;\\r\\n\\r\\n                        setTimeout(() => {\\r\\n                            let clark = document.createElement('img');\\r\\n                            clark.className = 'clark';\\r\\n                            clark.src = '../../sprite/office_clerk/simpl_2.png';\\r\\n                            document.querySelector('.titleStart').append(clark);\\r\\n\\r\\n                            textCat(clarc, 1, 'Оффисный клерк', 90);\\r\\n\\r\\n                            \\r\\n                        }, timeOut);\\r\\n\\r\\n                        timeOut += 4000;\\r\\n\\r\\n                        setTimeout(() => {\\r\\n                            document.querySelector('.clark').src = '../../sprite/office_clerk/simpl_1.png';\\r\\n                            document.querySelector('.mrShadow').className = 'mrShadowEnd';\\r\\n                            textCat(mrShadow1, 7, 'Неизвестный', 90);\\r\\n\\r\\n                            setTimeout(() => {\\r\\n                                document.querySelector('.mrShadowEnd').remove();\\r\\n                            }, 2000)\\r\\n                        }, timeOut);\\r\\n\\r\\n                        timeOut += 5000;\\r\\n\\r\\n                        setTimeout(() => {\\r\\n                            textCat(angryDoc1, 2, 'Робот пёс', 90);\\r\\n                            document.querySelector('.angryDoc2').src = '../../sprite/shadowMr/doc.png';\\r\\n                            document.querySelector('.angryDoc2').className = 'angryDocEnd';\\r\\n                            setTimeout(() => {\\r\\n                                document.querySelector('.angryDocEnd').remove();\\r\\n                            },2000)\\r\\n                                \\r\\n                        }, timeOut);\\r\\n\\r\\n                        timeOut += 3000;\\r\\n\\r\\n                        setTimeout(() => {\\r\\n                            let fireAss = document.createElement('img');\\r\\n                            fireAss.className = 'fireAss';\\r\\n                            fireAss.src = '../../sprite/fire_ass/simpl_7.png';\\r\\n                            document.querySelector('.titleStart').append(fireAss);\\r\\n                            setTimeout(() => {\\r\\n                                textCat(fireAss1, 1, 'Горипопка', 90);\\r\\n                                document.querySelector('.fireAss').src = '../../sprite/fire_ass/simpl_4.png';\\r\\n                                document.querySelector('.fireAss').className = 'fireAssTop';\\r\\n                            }, 1000)\\r\\n                        }, timeOut);\\r\\n\\r\\n                        timeOut += 4000;\\r\\n\\r\\n                        setTimeout(() => {\\r\\n                            textCat(clarc, 2, 'Оффисный клерк', 50);\\r\\n                        }, timeOut);\\r\\n\\r\\n                    }, 1500);\\r\\n                }, 3000)\\r\\n                \\r\\n                break;\\r\\n        \\r\\n            default:\\r\\n                break;\\r\\n        }\\r\\n        \\r\\n    }\\r\\n\\r\\n    // Запускаем игру\\r\\n        if(e.target.className == 'runGame'){\\r\\n\\r\\n            // Запоминаем начальные параметры игрока и заднего фона\\r\\n            document.querySelector('.user').style.top = `${cordBottom}px`;\\r\\n            document.querySelector('.fonts1').style.left = `${0}px`;\\r\\n            document.querySelector('.fonts2').style.left = `${1000}px`;\\r\\n            document.querySelector('.fonts3').style.left = `${2000}px`;\\r\\n            \\r\\n            // Закрываем меню\\r\\n            document.querySelector('.titleBox').style.display = 'none';\\r\\n            document.querySelector('.winMoveGame').style.display = 'none';\\r\\n            // Включаем старт\\r\\n            startStop = 1;\\r\\n\\r\\n            if(startStop < 2){\\r\\n            // Настройки уровня и рендер объектов\\r\\n            runConfigLevel ();\\r\\n\\r\\n            // Заполняем конфиг персонажа\\r\\n            switch (namePers[numberUser]) {\\r\\n                case 'Богатый цыпа':\\r\\n                    levelHardJump = 15; // Уровень рандома в прыжке и падении\\r\\n                    heightJump = 100; // Высота прыжка\\r\\n                    speedFailInterval = 90; // Скорость падения\\r\\n                    speedFaceObjMove = 90 - countLevel * 2; // Скорость блоков\\r\\n                    colsPerk = 3; // Количество перок\\r\\n                break;\\r\\n\\r\\n                case 'Жирный Санчес':\\r\\n                    levelHardJump = 7;\\r\\n                    heightJump = 110;\\r\\n                    speedFailInterval = 100 - countLevel * 2;\\r\\n                    topVertical = 10;\\r\\n                    colsPerk = 3;\\r\\n                break;\\r\\n\\r\\n                case 'Крутой Жро':\\r\\n                    levelHardJump = 5; // Уровень рандома в прыжке и падении\\r\\n                    heightJump = 50; // Высота прыжка\\r\\n                    speedFailInterval = 90; // Скорость падения\\r\\n                    speedFaceObjMove = 150 - countLevel * 2; // Скорость блоков\\r\\n                    colsPerk = 3; // Количество перок\\r\\n                break;\\r\\n\\r\\n                case 'Горипопка':\\r\\n                    levelHardJump = 10; // Уровень рандома в прыжке и падении\\r\\n                    heightJump = 150; // Высота прыжка\\r\\n                    speedFailInterval = 250; // Скорость падения\\r\\n                    speedFaceObjMove = 70 - countLevel * 2; // Скорость блоков\\r\\n                    colsPerk = 3; // Количество перок\\r\\n                break;\\r\\n\\r\\n                case 'Свежий огурчик':\\r\\n                    speedFaceObjMove = 100 - countLevel * 2;\\r\\n                break;\\r\\n\\r\\n                case 'Офисный Кларк' :\\r\\n                    levelHardJump = 10; // Уровень рандома в прыжке и падении\\r\\n                    heightJump = 100; // Высота прыжка\\r\\n                    speedFailInterval = 130; // Скорость падения\\r\\n                    speedFaceObjMove = 80 - countLevel * 2; // Скорость блоков\\r\\n                    colsPerk = 3; // Количество перок\\r\\n                    // // Колонки у кларка выше всех!\\r\\n                goRenderObj(300)  \\r\\n                break;\\r\\n            \\r\\n                default:\\r\\n                    break;\\r\\n            }\\r\\n\\r\\n            // Начинаем анимацию бега\\r\\n            intervalActionUse = setInterval(() => {\\r\\n                userAnima('user', 12);\\r\\n            }, speedUse); \\r\\n\\r\\n            // Снимаем здоровье если налетели на блок, или засчитываем очко если перепрыгнули\\r\\n            intervalFaceObjMove = phyzikBox(speedFaceObjMove)\\r\\n\\r\\n            }else{\\r\\n                startStop = 0;\\r\\n                clearInterval(intervalActionUse);\\r\\n                clearInterval(intervalFaceObjMove);\\r\\n            }\\r\\n\\r\\n\\r\\n            document.addEventListener('keyup', e => {\\r\\n\\r\\n                if(e.code == 'KeyP'){\\r\\n                    startStop = 0;\\r\\n                    clearInterval(intervalActionUse);\\r\\n                    clearInterval(intervalFaceObjMove);\\r\\n                }\\r\\n\\r\\n                if(e.code == 'KeyL' && startStop > 0){\\r\\n                    switch (namePers[numberUser]) {\\r\\n                        case 'Богатый цыпа':\\r\\n                            if(colsPerk > 0){\\r\\n                                colsPerk = colsPerk - 1;\\r\\n                                document.querySelector('.statrText').textContent = `Перков осталось ${colsPerk}`;\\r\\n\\r\\n                                setTimeout(() => {\\r\\n                                    document.querySelector('.statrText').textContent = ``;\\r\\n                                }, 2000);\\r\\n\\r\\n                                document.querySelectorAll('.faceBox').forEach((e) => {  \\r\\n                                    e.style.height = '20px';\\r\\n                                });\\r\\n\\r\\n                                setTimeout(() => {\\r\\n                                    document.querySelectorAll('.faceBox').forEach((e) => {\\r\\n                                        e.style.height = `${Math.ceil(Math.random()*250) + 100}px`;\\r\\n                                    });\\r\\n                            }, 5000)\\r\\n                            } else {\\r\\n                                document.querySelector('.statrText').textContent = `Перков уже нет`;\\r\\n\\r\\n                                setTimeout(() => {\\r\\n                                    document.querySelector('.statrText').textContent = ``;\\r\\n                                }, 2000);\\r\\n                            }\\r\\n                        break;\\r\\n\\r\\n                        case 'Жирный Санчес':\\r\\n\\r\\n                        if(colsPerk > 0){\\r\\n                            colsPerk = colsPerk - 1;\\r\\n                            document.querySelector('.statrText').textContent = `Перков осталось ${colsPerk}`;\\r\\n\\r\\n                            setTimeout(() => {\\r\\n                                document.querySelector('.statrText').textContent = ``;\\r\\n                            }, 2000);\\r\\n\\r\\n                            topVertical = -999;\\r\\n\\r\\n                            setTimeout(() => {\\r\\n                                topVertical = 10;\\r\\n                        }, 5000)\\r\\n                        } else {\\r\\n                            document.querySelector('.statrText').textContent = `Перков уже нет`;\\r\\n\\r\\n                            setTimeout(() => {\\r\\n                                document.querySelector('.statrText').textContent = ``;\\r\\n                            }, 2000);\\r\\n                        }\\r\\n\\r\\n                        break;\\r\\n\\r\\n                        case 'Крутой Жро':\\r\\n\\r\\n                            if(colsPerk > 0){\\r\\n                                colsPerk = colsPerk - 1;\\r\\n                                document.querySelector('.statrText').textContent = `Перков осталось ${colsPerk}`;\\r\\n\\r\\n                                setTimeout(() => {\\r\\n                                    document.querySelector('.statrText').textContent = ``;\\r\\n                                }, 2000);\\r\\n\\r\\n                                clearInterval(intervalFaceObjMove);\\r\\n\\r\\n                                intervalFaceObjMove = phyzikBox(300);\\r\\n\\r\\n                                setTimeout(() => {\\r\\n                                    clearInterval(intervalFaceObjMove);\\r\\n                                    speedFaceObjMove = 300;\\r\\n                                    intervalFaceObjMove = phyzikBox(150);\\r\\n                                }, 15000)\\r\\n                            } else {\\r\\n                                document.querySelector('.statrText').textContent = `Перков уже нет`;\\r\\n\\r\\n                                setTimeout(() => {\\r\\n                                    document.querySelector('.statrText').textContent = ``;\\r\\n                                }, 2000);\\r\\n                            }\\r\\n\\r\\n                        break;\\r\\n                        case 'Горипопка':\\r\\n\\r\\n                            if(colsPerk > 0){\\r\\n                                colsPerk = colsPerk - 1;\\r\\n                                document.querySelector('.statrText').textContent = `Перков осталось ${colsPerk}`;\\r\\n\\r\\n                                setTimeout(() => {\\r\\n                                    document.querySelector('.statrText').textContent = ``;\\r\\n                                }, 2000);\\r\\n\\r\\n                                clearInterval(intervalFaceObjMove);\\r\\n\\r\\n                                intervalFaceObjMove = phyzikBox(10);\\r\\n\\r\\n                                setTimeout(() => {\\r\\n                                    clearInterval(intervalFaceObjMove);\\r\\n                                    speedFaceObjMove = 70;\\r\\n                                    intervalFaceObjMove = phyzikBox(70);\\r\\n                                }, 290)\\r\\n                            } else {\\r\\n                                document.querySelector('.statrText').textContent = `Перков уже нет`;\\r\\n\\r\\n                                setTimeout(() => {\\r\\n                                    document.querySelector('.statrText').textContent = ``;\\r\\n                                }, 2000);\\r\\n                            }\\r\\n\\r\\n                        break;\\r\\n                        case 'Свежий огурчик':\\r\\n\\r\\n                            if(colsPerk > 0){\\r\\n                                colsPerk = colsPerk - 1;\\r\\n                                document.querySelector('.statrText').textContent = `Перков осталось ${colsPerk}`;\\r\\n\\r\\n                                setTimeout(() => {\\r\\n                                    document.querySelector('.statrText').textContent = ``;\\r\\n                                }, 2000);\\r\\n\\r\\n                                document.querySelector('.moveElem').style.left = \\r\\n                                    Number(document.querySelector('.moveElem').style.left.replace('px', '')) + 500 + 'px';\\r\\n                                \\r\\n                                setTimeout(() => {\\r\\n                                    levelHardJump = 40;\\r\\n                                }, 5000)\\r\\n                            } else {\\r\\n                                document.querySelector('.statrText').textContent = `Перков уже нет`;\\r\\n\\r\\n                                setTimeout(() => {\\r\\n                                    document.querySelector('.statrText').textContent = ``;\\r\\n                                }, 2000);\\r\\n                            }\\r\\n\\r\\n                        break;\\r\\n                        case 'Офисный Кларк' :\\r\\n\\r\\n                            if(colsPerk > 0){\\r\\n                                colsPerk = colsPerk - 1;\\r\\n                                document.querySelector('.statrText').textContent = `Перков осталось ${colsPerk}`;\\r\\n\\r\\n                                setTimeout(() => {\\r\\n                                    document.querySelector('.statrText').textContent = ``;\\r\\n                                }, 2000);\\r\\n\\r\\n                                document.querySelectorAll('.faceBox').forEach((e) => {\\r\\n                                    e.style.height = `${Math.ceil(Math.random()*(250 / colsPerk)) + 100}px`;\\r\\n                                });\\r\\n                            \\r\\n                            } else {\\r\\n                                document.querySelector('.statrText').textContent = `Перков уже нет`;\\r\\n\\r\\n                                setTimeout(() => {\\r\\n                                    document.querySelector('.statrText').textContent = ``;\\r\\n                                }, 2000);\\r\\n                            }\\r\\n                            \\r\\n                        break;\\r\\n                    \\r\\n                        default:\\r\\n                            break;\\r\\n                    }\\r\\n\\r\\n                    // Чек востановления перок\\r\\n                    if(colsPerk == 0 && document.querySelector('.boxCheck') == null){\\r\\n                        clearInterval(myCheked);\\r\\n\\r\\n                        const chechk = document.createElement('img');\\r\\n                        chechk.className = 'checkIMG';\\r\\n                        chechk.style.width = '100px';\\r\\n                        chechk.style.height = '100px';\\r\\n                        const boxShechk = document.createElement('div');\\r\\n                        boxShechk.className = 'boxCheck';\\r\\n                        boxShechk.style.position = 'absolute';\\r\\n                        boxShechk.style.top = `${Math.ceil(Math.random()*100) + 100}px`;\\r\\n                        boxShechk.style.left = '4%';\\r\\n                        boxShechk.style.zIndex = '5';\\r\\n                        boxShechk.append(chechk);\\r\\n                        document.querySelector('.boxcontainer').append(boxShechk);\\r\\n\\r\\n                        topChesk = Number(document.querySelector('.boxCheck').style.top.replace('px', '')) + 100\\r\\n                        heightChesk = 170;\\r\\n                    \\r\\n\\r\\n                        myCheked = setInterval(() => {\\r\\n                            document.querySelector('.statrText').textContent = 'Востановление перок. Зависни в кружке.'\\r\\n                            otherAnima('checkIMG', 'chechk', 12);\\r\\n                            topUser = Number(document.querySelector('.user').style.top.replace('px', ''));\\r\\n                            heightUser = 200;\\r\\n                            console.log(topUser, topChesk, heightUser, heightChesk)\\r\\n                            if(topUser < topChesk && topUser + heightUser < topChesk + heightChesk){\\r\\n                                document.querySelector('.checkIMG').className = 'checkIMG animaCheck';\\r\\n                                miniCounterJump++;\\r\\n\\r\\n                                if(miniCounterJump >= 3 && document.querySelector('.boxCheck') != null){\\r\\n                                    document.querySelector('.statrText').textContent = 'Удачно!';\\r\\n                                    colsPerk = 3;\\r\\n                                    document.querySelector('.statrText').textContent = 'Перки восстановлены!';\\r\\n                                \\r\\n                                    // Если в текущем массиве уровня есть запись имени босса\\r\\n                                    if(arrLevel[5] != 'null'){\\r\\n                                        // Если удачно приняли перки то отнимаем очки у босса\\r\\n                                        hpBoss -= 10;\\r\\n                                        let hp = Number(document.querySelector('.linerHPBossColor').style.width.replace('px', ''));\\r\\n                                        hp -= 10;\\r\\n                                        document.querySelector('.linerHPBossColor').style.width = `${hp}px`;\\r\\n                                        document.querySelector('.boxCheck') != null ?\\r\\n                                            document.querySelector('.boxCheck').remove()\\r\\n                                            :\\r\\n                                            null;\\r\\n\\r\\n\\r\\n                                        hpBoss < 1 ? \\r\\n                                        (() => {\\r\\n                                            clearInterval(bossAnimaId);\\r\\n                                            clearInterval(myCheked);\\r\\n                                            bossEndId = setInterval(() => {\\r\\n                                                allAnima('bossImg', `../../sprite/${arrLevel[3]}/end`, 11)\\r\\n                                            }, 70);\\r\\n\\r\\n                                            setTimeout(()=>{\\r\\n                                                clearInterval(bossEndId);\\r\\n                                                document.querySelector('.bossImg').src = '../../sprite/boss1/end/simpl_11.png';\\r\\n                                            }, 780);\\r\\n\\r\\n                                            document.querySelector('.moveElem').style.left = '1000px';\\r\\n                                            document.querySelector('.moveElem').innerHTML = '';\\r\\n                                            clearInterval(intervalFaceObjMove);\\r\\n                                            startStop = 0;\\r\\n                                            clearInterval(intervalActionUse);\\r\\n                                            clearInterval(intervalFaceObjMove);\\r\\n                                            clearInterval(idSpeedJumpCadr);\\r\\n                                            let gameOver = document.createElement('audio');\\r\\n                                            gameOver.src = '../../music/game/nextLevel.mp3';\\r\\n                                            gameOver.play();\\r\\n                                            modalPush ('Босс ПОБЕЖДЕН!!!!', false);\\r\\n                                        })()\\r\\n                                        :\\r\\n                                        null;\\r\\n                                        clearInterval(bossAnimaId);\\r\\n\\r\\n                                        bossAnimaId = setInterval(()=> {\\r\\n                                            allAnima('bossImg', `../../sprite/${arrLevel[3]}/wtf`, 11);\\r\\n                                        }, 70); \\r\\n\\r\\n                                        setTimeout(() => {\\r\\n                                            clearInterval(myCheked);\\r\\n                                            document.querySelector('.boxCheck') != null ?\\r\\n                                            document.querySelector('.boxCheck').remove()\\r\\n                                            :\\r\\n                                            null;\\r\\n                                            clearInterval(bossAnimaId);\\r\\n                                            bossAnimaId = setInterval(()=> {\\r\\n                                            allAnima('bossImg', `../../sprite/${arrLevel[3]}/defold`, 11);\\r\\n                                            miniCounterJump = miniCounterJump - hardBoss;\\r\\n                                            }, 70); \\r\\n                                        }, 1500);\\r\\n                                    }\\r\\n                                }\\r\\n                            } else{\\r\\n                                document.querySelector('.checkIMG').className = 'checkIMG';\\r\\n                                miniCounterJump = 0;\\r\\n                            }\\r\\n                        }, 1000);\\r\\n\\r\\n                        myCheked != null ?\\r\\n                        setTimeout(()=>{\\r\\n                            console.log('удалили интервал, больше нет', miniCounterJump)\\r\\n                            clearInterval(myCheked);\\r\\n                            myCheked = null;\\r\\n                            document.querySelector('.boxCheck').remove();\\r\\n                            document.querySelector('.statrText').textContent = '';\\r\\n                             \\r\\n                        }, 2000)\\r\\n                        :\\r\\n                        null;\\r\\n                    }\\r\\n                }\\r\\n                \\r\\n                // Прыжок\\r\\n                if(e.code == 'KeyZ' && startStop > 0){\\r\\n                    // Удаляем таймер падения с предыдущего нажатие\\r\\n                    clearInterval(useFailedBottom);\\r\\n                    // прыгаем, если после прыжка улетаем за потолок, то приправниваем координаты пола\\r\\n                    // иначе прыгаем как обычно\\r\\n                    let ramdomFailed = Math.ceil(Math.random()*levelHardJump);\\r\\n                    Number(document.querySelector('.user').style.top.replace('px', '')) - heightJump < topVertical \\r\\n                        ?\\r\\n                        (() => {\\r\\n                            let gameOver = document.createElement('audio');\\r\\n                            gameOver.src = '../../music/game/fail.mp3';\\r\\n                            gameOver.play();\\r\\n                            document.querySelector('.user').style.top = `${cordBottom}px`\\r\\n                            operativUserTop = cordBottom;\\r\\n                        })()\\r\\n                        :\\r\\n                        (() =>{\\r\\n                            let gameOver = document.createElement('audio');\\r\\n                            gameOver.src = '../../music/game/jump.mp3';\\r\\n                            gameOver.play();\\r\\n                            document.querySelector('.user').style.top = \\r\\n                            `${Number(document.querySelector('.user').style.top.replace('px', '')) - \\r\\n                            heightJump + (ramdomFailed / 2)}px`;\\r\\n                        })()\\r\\n                        \\r\\n\\r\\n                    // Локальная переменая с координатой игрока по вертикале (top, y)\\r\\n                    operativUserTop = Number(document.querySelector('.user').style.top.replace('px', ''));\\r\\n                    \\r\\n                    // Падаем\\r\\n                    if(operativUserTop < cordBottom){\\r\\n                        useFailedBottom = setInterval(() => {\\r\\n                            // Добавляем пиксели в падение\\r\\n                            // Если после падения улетаем за пол, приравниваем координаты пола, иначе падаем как обычно\\r\\n                            operativUserTop + (heightJump / 2) > cordBottom ? \\r\\n                                (()=>{\\r\\n                                    \\r\\n                                    document.querySelector('.user').style.top = `${cordBottom }px`\\r\\n                                })()\\r\\n                                \\r\\n                                :\\r\\n                                document.querySelector('.user').style.top = `${operativUserTop + ramdomFailed + (heightJump / 2)}px`;\\r\\n                            // Запоминаем падение в пикселях\\r\\n                            operativUserTop += (heightJump / 2);\\r\\n                            // Ставим условие удаления таймера, если мы на полу или провалились - то удалить таймер падения\\r\\n                            operativUserTop >= cordBottom ? clearInterval(useFailedBottom) : null;\\r\\n\\r\\n                        }, speedFailInterval);\\r\\n\\r\\n                    }\\r\\n                }\\r\\n            });\\r\\n        };\\r\\n\\r\\n\\r\\n           \\r\\n        // трекер босса\\r\\n        if(arrLevel[3] != 'null'){\\r\\n\\r\\n            clearInterval(bossAnimaId)\\r\\n            // Дефолдная анимация\\r\\n            bossAnimaId = setInterval(()=> {\\r\\n                allAnima('bossImg', `../../sprite/${arrLevel[3]}/defold`, 11);\\r\\n            }, 70); \\r\\n\\r\\n            // Каждые 15 секунд босс проводит атаку\\r\\n            // если анимация босса началась, ждем 1.7 секунд\\r\\n                bossAnimaBoxId = setInterval(() => {\\r\\n\\r\\n                    clearInterval(bossAnimaId);\\r\\n    \\r\\n                    bossAnimaId = setInterval(()=> {\\r\\n                        allAnima('bossImg', `../../sprite/${arrLevel[3]}/attak`, 11);\\r\\n                    }, 70); \\r\\n\\r\\n                    document.querySelector('.moveElem').innerHTML = '';\\r\\n                    colsBox = arrLevel[0];\\r\\n                    arrboxId = [];\\r\\n                    heart = 3;\\r\\n                    \\r\\n                    if(widthBoss < 100){\\r\\n                        goRenderObj(50, 850, 100 + widthBoss, 100);\\r\\n                        widthBoss += 40;\\r\\n                    } else {\\r\\n                        countBoss < 3 ? \\r\\n                        countBoss += 1\\r\\n                        :\\r\\n                        null;\\r\\n                        goRenderObj(50, 850, 100 + widthBoss, 100 + heightBoss, `../../img/box_${countBoss}.png`);\\r\\n                        heightBoss += 50;\\r\\n                    }\\r\\n\\r\\n                    \\r\\n                    \\r\\n    \\r\\n                    setTimeout(() => {\\r\\n                        clearInterval(bossAnimaId);\\r\\n                        bossAnimaId = setInterval(()=> {\\r\\n                        allAnima('bossImg', `../../sprite/${arrLevel[3]}/defold`, 11);\\r\\n                        console.log('defold animation')\\r\\n                        }, 90); \\r\\n                    }, 770);\\r\\n                }, 15000); \\r\\n            \\r\\n        }\\r\\n\\r\\n    //Событие модалки\\r\\n    if(e.target.className == 'title'){\\r\\n        window.location.reload();\\r\\n    }\\r\\n\\r\\n    if(e.target.className == 'nextLevel reload'){\\r\\n        clearInterval(bossAnimaId);\\r\\n        clearInterval(bossAnimaBoxId);\\r\\n        document.querySelector('.modal').style.display = 'none';\\r\\n        operativUserTop = 0;\\r\\n        clearInterval(idSpeedJumpCadr);\\r\\n        startStop = 1;\\r\\n        heart = 3;\\r\\n        arrboxId = [];\\r\\n        colsPerk = 3;\\r\\n        colsBox = arrLevel[0];\\r\\n        goRenderObj();\\r\\n        intervalFaceObjMove = phyzikBox(speedFaceObjMove)\\r\\n    }\\r\\n\\r\\n    if(e.target.className == 'nextLevel'){\\r\\n        clearInterval(bossAnimaId);\\r\\n        clearInterval(bossAnimaBoxId);\\r\\n        document.querySelector('.modal').style.display = 'none';\\r\\n        operativUserTop = 0;\\r\\n        clearInterval(idSpeedJumpCadr);\\r\\n        startStop = 1;\\r\\n        heart = 3;\\r\\n        arrboxId = [];\\r\\n        colsPerk = 3;\\r\\n        countLevel += 1;\\r\\n        runConfigLevel();\\r\\n        intervalFaceObjMove = phyzikBox(speedFaceObjMove)\\r\\n    }\\r\\n})\\n\\n//# sourceURL=webpack://gogo/./src/index.js?\");\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module can't be inlined because the eval devtool is used.\n/******/ \tvar __webpack_exports__ = {};\n/******/ \t__webpack_modules__[\"./src/index.js\"]();\n/******/ \t\n/******/ })()\n;\n\n//# sourceURL=webpack://gogo/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;